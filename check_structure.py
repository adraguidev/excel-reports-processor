#!/usr/bin/env python3
"""
Script para verificar la estructura m√≠nima del proyecto Reporteador.
"""
import os
import sys
from pathlib import Path

# A√±adir ruta del proyecto para poder importar el validador
sys.path.append(str(Path(__file__).parent.resolve()))

try:
    from structure_validator import validate_project_structure
except ImportError:
    print("‚ùå Error: No se pudo importar 'structure_validator.py'.")
    print("   Aseg√∫rate de que el script est√© en la carpeta principal del proyecto.")
    sys.exit(1)

def run_check():
    """Ejecuta la validaci√≥n y muestra un reporte claro."""
    print("=" * 60)
    print("üîç VERIFICADOR DE ESTRUCTURA PARA REPORTEADOR")
    print("=" * 60)
    print(f"Directorio actual: {os.getcwd()}\n")

    is_valid, report = validate_project_structure()

    if report['created']:
        print("üõ†Ô∏è  Elementos creados autom√°ticamente:")
        for item in report['created']:
            print(f"  [+] {item}")
        print("-" * 30)

    if is_valid:
        print("‚úÖ ¬°√âXITO! La estructura del proyecto es correcta.")
        print("   La aplicaci√≥n deber√≠a funcionar sin problemas.")
    else:
        print("‚ùå ¬°ERROR CR√çTICO! Faltan archivos o carpetas indispensables.")
        print("   La aplicaci√≥n NO podr√° iniciarse correctamente.")
        print("\n   Por favor, aseg√∫rate de que los siguientes elementos existan:")
        for error in report['errors']:
            item_name = error.split("'")[1] if "'" in error else error
            print(f"   - {item_name}")
        
        print("\n   La aplicaci√≥n se cerrar√° si no se resuelven estos problemas.")

    print("\n" + "=" * 60)

if __name__ == "__main__":
    run_check() 